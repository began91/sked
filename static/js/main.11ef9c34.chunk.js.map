{"version":3,"sources":["resources/28patch.png","features/schedule/parseSchedule.js","features/schedule/adjustETDs.js","features/schedule/scheduleSlice.js","resources/LaunchSVG.js","resources/LandSVG.js","components/StudMenu.js","hooks/useTime.js","components/Status.js","components/Event.js","components/Instructor.js","components/Line.js","components/TimelineGrid.js","components/Schedule.js","components/DropArea.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["module","exports","col","parseSchedule","state","action","parsedData","payload","lines","instructors","events","lastInstructorUID","lastLine","lastDep","lastDuration","forEach","row","line","slice","notes","eventUID","uid","event","student","duration","Number","TMS","ETD","skedDep","moment","format","add","ATD","status","instructorUID","instructor","name","breif","ETA","push","aircraft","side","buno","GTN","includes","NVG","parking","up","time","crew","adjustETDs","newETA","filter","depTime","subtract","isBefore","launchesBefore15","reduce","map","sort","a","b","aTime","bTime","scheduleSlice","createSlice","initialState","reducers","parseData","launch","ETE","instructorETA","inbound","timeOut","ATA","i","findIndex","land","actions","FaPlaneDeparture","props","stroke","fill","strokeWidth","viewBox","width","height","className","xmlns","id","d","FaPlaneArrival","StudMenu","dispatch","useDispatch","color","useState","display","style","backgroundColor","onClick","e","LandSVG","useTime","setTime","useEffect","interval","setInterval","clearInterval","Status","elapsedTime","Math","round","percentComplete","borderTopRightRadius","borderBottomRightRadius","Event","backgroundOpacity","eventColor","displayName","split","startTime","startCol","floor","startRow","eventStyle","gridColumn","gridRowStart","toFixed","Instructor","useSelector","schedule","crewName","instStyle","Times","hours","key","Line","instructorUIDs","_eventUIDs","useSortedEvents","TimelineGrid","minute","active","gridColumnStart","Schedule","Object","keys","DropArea","onDrop","files","length","file","config","error","console","log","complete","results","data","skipEmptyLines","header","Papa","parse","accept","getRootProps","getInputProps","isDragAccept","isDragActive","isDragReject","additionalClass","App","src","logo","alt","configureStore","reducer","scheduleReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.11ef9c34.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/28patch.0bbd909b.png\";","import uid from 'uid';\r\nimport moment from 'moment';\r\n\r\nconst col = { //dictionary for what each column each data is in. May need to be able to dynamically determine which is the correct column based on the rest of the data in case someone has mixed up columns.\r\n    lineId: 3,\r\n    brief: 7,\r\n    aircraft: 10,\r\n    ETD: 11,\r\n    TMS: 12,\r\n    ETA: 15,\r\n    duration: 19,\r\n    instructor: 21,\r\n    student: 22,\r\n    event: 24,\r\n    eventDuration: 25,\r\n    notes: 36,\r\n    issueTime: 43,\r\n    parking: 44\r\n}\r\n\r\n// lines own aircraft, and instructors\r\n// instructors own events and notes\r\n// notes are sometimes relevant to the student as well\r\n// eg, fly first\r\n\r\nconst parseSchedule = (state, action) => {\r\n\r\n    const parsedData = action.payload;\r\n    let lines = {};\r\n    let instructors = {};\r\n    let events = {};\r\n    let lastInstructorUID = '';\r\n    let lastLine = '';\r\n    let lastDep = '';\r\n    let lastDuration = '';\r\n    parsedData.forEach(row => {\r\n        if (!row[col.student]) {\r\n            return 0;\r\n        }\r\n        //every line has an event...\r\n        const line = row[col.lineId].slice(0,3) || lastLine;\r\n        lastLine = line;\r\n        const notes = row[col.notes];\r\n        const eventUID = uid();\r\n        const event = {\r\n            student: row[col.student],\r\n            uid: eventUID,\r\n            event: row[col.event],\r\n            duration: Number(row[col.eventDuration]),\r\n            TMS: row[col.TMS],\r\n            ETD: '', // row[col.ETD].slice(-5).split(':').join('') || lastETD,\r\n            skedDep: row[col.ETD] ? moment(row[col.ETD].slice(-5),'H:mm').format('MM/DD/YYYY H:mm') : moment(lastDep, 'MM/DD/YYYY H:mm').add(lastDuration*60 + 15, 'minutes').format('MM/DD/YYYY H:mm'),\r\n            ATD: '',\r\n            status: '',\r\n            notes,\r\n            line\r\n        }\r\n        lastDuration = event.duration;\r\n        lastDep = event.skedDep;\r\n        \r\n        if (row[col.instructor]) {\r\n            //TODO: handle SOLO as instrucor and make it the studentSOLO\r\n            const instructorUID = uid();\r\n            const instructor = {\r\n                name: row[col.instructor],\r\n                uid: instructorUID,\r\n                breif: row[col.brief],\r\n                skedDep: moment(row[col.ETD].slice(-5),'H:mm').format('MM/DD/YYYY H:mm'),\r\n                ETD: '', // row[col.ETD].slice(-5).split(':').join(''),\r\n                ETA: '',\r\n                status: '',\r\n                events: [],\r\n                notes: []\r\n            }\r\n            \r\n            lastInstructorUID = instructorUID;\r\n            \r\n            \r\n            \r\n            instructors[instructorUID] = instructor;\r\n            \r\n            if (lines[line]?.instructors) {\r\n                lines[line].instructors.push(instructorUID);\r\n            } else {\r\n                lines[line] = {instructors: [instructorUID]};\r\n            }\r\n            \r\n            if (row[col.aircraft] && !lines[line].aircraft) {\r\n                const aircraft = {\r\n                    TMS: row[col.TMS],\r\n                    side: row[col.aircraft].slice(2,5),\r\n                    buno: row[col.aircraft].slice(-7,-1),\r\n                    GTN: row[col.TMS] === 'TH-57C' || row[col.aircraft].includes('***'),\r\n                    NVG: row[col.TMS] === 'TH-57C' && row[col.aircraft].includes('*'),\r\n                    parking: row[col.parking],\r\n                    status: {up: true, time: '0800', notes:''},\r\n                }\r\n                lines[line].aircraft = aircraft;\r\n            }\r\n        }\r\n        event.instructorUID = lastInstructorUID;\r\n        events[eventUID] = event;\r\n\r\n        if (row[col.event] === 'CREW' || row[col.event] === 'HT OBS (Helo)') {\r\n            const crew = row[col.student];\r\n            instructors[lastInstructorUID].crew = crew;\r\n        } else {\r\n            instructors[lastInstructorUID].events.push(eventUID);\r\n            instructors[lastInstructorUID].notes.push(notes);\r\n            if (lines[line].events) {\r\n                lines[line].events.push(eventUID);\r\n            } else {\r\n                lines[line].events = [eventUID];\r\n            }\r\n        }\r\n    });\r\n    state.lines = lines;\r\n    state.instructors = instructors;\r\n    state.events = events;\r\n    state.parsedData = parsedData;\r\n}\r\n\r\nexport default parseSchedule\r\n","import moment from 'moment';\r\n\r\nconst launchesBefore15 = (ETA, ETD) => {\r\n    let result = moment(ETD,'MM/DD/YYYY H:mm').subtract(15,'m').isBefore(moment(ETA,'MM/DD/YYYY H:mm'));\r\n    // console.log({ETA, ETD, result})\r\n    return result;\r\n}\r\n\r\nconst adjustETDs = (state, line, instructorUID, ETA) => {\r\n    let newETA;\r\n    // console.log({line,ETA})\r\n    let laterEvents = state.lines[line].instructors\r\n    .filter(uid => {\r\n        const instructor = state.instructors[uid];\r\n        const depTime = instructor.ETD || instructor.skedDep;\r\n        // console.log(instructor.name, depTime)\r\n        return !instructor.status && uid!==instructorUID && launchesBefore15(ETA, depTime);\r\n    }).reduce((events, uid) => {\r\n        events.push(...state.instructors[uid].events);\r\n        // console.log(events);\r\n        return events;\r\n    }, []);\r\n    // console.log(laterEvents)\r\n    laterEvents.map(uid => state.events[uid])\r\n    .sort((a,b)=>{\r\n        const aTime = a.ATD || a.ETD || a.skedDep;\r\n        const bTime = b.ATD || b.ETD || b.skedDep;\r\n        // console.log({aTime,bTime});\r\n        return moment(aTime,'MM/DD/YYYY H:mm') - moment(bTime,'MM/DD/YYYY H:mm');\r\n    }).reduce((ETD, event)=> {\r\n        event.ETD = ETD.format('MM/DD/YYYY H:mm');\r\n        event.ETA = ETD.add(event.duration,'h').format('MM/DD/YYYY H:mm');\r\n        newETA = event.ETA;\r\n        return ETD.add(15,'m');\r\n    },moment(ETA,'MM/DD/YYYY H:mm').add(15,'m'));\r\n    if (newETA) {\r\n        adjustETDs(state, line, newETA)\r\n    }\r\n}\r\n\r\nexport default adjustETDs;","import {createSlice} from '@reduxjs/toolkit';\r\n// import schedule from './schedule';\r\nimport parseSchedule from './parseSchedule';\r\nimport adjustETDs from './adjustETDs'\r\nimport moment from 'moment';\r\n\r\nconst initialState = {\r\n    parsedData: [],\r\n    lines: {},\r\n    instructors: {},\r\n    events: {},\r\n}\r\n\r\nexport const scheduleSlice = createSlice({\r\n    name: 'schedule',\r\n    initialState,\r\n    reducers: {\r\n        parseData: (state, action) => {\r\n            parseSchedule(state, action);\r\n        },\r\n        launch: (state, action) => {\r\n            const uid = action.payload;\r\n            const event = state.events[uid];\r\n            event.ATD = moment().format('MM/DD/YYYY H:mm');\r\n            event.ETE = state.events[uid].duration;\r\n            event.ETA = moment().add(event.duration,'h').format('MM/DD/YYYY H:mm');\r\n            event.status = 'airborne';\r\n\r\n            //update ETD's of events on this line within 15 minutes of this events land time to be 15 minutes after ETA. and recurse\r\n            const instructorUID = event.instructorUID;\r\n            state.instructors[instructorUID].status = 'airborne';\r\n            const line = event.line;\r\n            // const instructors = state.lines[line].instructors;\r\n\r\n            // stagger the ETDs of the instructor's next events for 15 minutes after ETA\r\n            let instructorETA = event.ETA;\r\n            state.instructors[instructorUID].events\r\n            .map(eventUID=>state.events[eventUID])\r\n            .filter(event=>event.uid !== uid && !event.status)\r\n            .reduce((ETD, event)=>{\r\n                // console.log(ETD.format('Hmm'))\r\n                event.ETD = ETD.format('MM/DD/YYYY H:mm');\r\n                event.ETA = ETD.add(event.duration,'h').format('MM/DD/YYYY H:mm');\r\n                instructorETA = event.ETA\r\n                return ETD.add(15,'m');\r\n            }, moment(state.events[uid].ETA, 'MM/DD/YYYY H:mm').add(15,'m'));\r\n            state.instructors[instructorUID].ETA = instructorETA;\r\n\r\n            adjustETDs(state, line, instructorUID, instructorETA)\r\n        },\r\n        inbound: (state,action) => {\r\n            const [uid, timeOut] = action.payload;\r\n            // console.log({uid, timeOut});\r\n            const ATA = moment().add(timeOut,'minutes').format('MM/DD/YYYY H:mm');\r\n            const i = state.events.findIndex(event=> event.uid===uid);\r\n            state.events[i].ATA = ATA;\r\n            state.events[i].status = 'inbound';\r\n        },\r\n        land: (state, action) => {\r\n            const uid = action.payload;\r\n            const i = state.events.findIndex(event=> event.uid===uid);\r\n            state.events[i].status = 'landed';\r\n        }\r\n    }\r\n});\r\n\r\nexport const {parseData, launch, inbound, land} = scheduleSlice.actions;\r\n\r\nexport default scheduleSlice.reducer;","import * as React from \"react\";\r\nimport './LaunchSVG.css'\r\n\r\nfunction FaPlaneDeparture(props) {\r\n  return <svg stroke=\"currentColor\" fill=\"currentColor\" strokeWidth=\"0\" viewBox=\"0 0 1 1\" width=\"1em\" height=\"1em\" className=\"plane-launch\" xmlns=\"http://www.w3.org/2000/svg\">\r\n  {/* <rect width=\"1em\" height=\"1em\" fill=\"#E5E5E5\"/> */}\r\n  {/* <g id=\"Frame\" clip-path=\"url(#clip0)\"> */}\r\n  <path id=\"runway\" d=\"M0.975 0.8H0.025C0.0111875 0.8 0 0.811188 0 0.825V0.875C0 0.888813 0.0111875 0.9 0.025 0.9H0.975C0.988813 0.9 1 0.888813 1 0.875V0.825C1 0.811188 0.988813 0.8 0.975 0.8Z\" fill=\"black\"/>\r\n  <path id=\"plane-launch\" d=\"M0.125859 0.633234C0.135672 0.643922 0.149453 0.649984 0.163875 0.649969L0.367844 0.649687C0.38394 0.649666 0.399806 0.645855 0.414156 0.638562L0.868781 0.407859C0.910563 0.386656 0.948016 0.356391 0.9735 0.31675C1.00211 0.27225 1.00522 0.240047 0.993922 0.217297C0.982656 0.194531 0.955266 0.177812 0.902906 0.174406C0.856266 0.171375 0.809875 0.183656 0.768094 0.204844L0.614172 0.282953L0.272453 0.154734C0.268345 0.151967 0.263571 0.150346 0.258627 0.150041C0.253682 0.149737 0.248746 0.150758 0.244328 0.153L0.141594 0.205141C0.124922 0.213594 0.120891 0.235844 0.133516 0.249719L0.377609 0.403L0.216344 0.484844L0.103297 0.427859C0.0994022 0.425896 0.0951002 0.424875 0.0907385 0.424881C0.0863767 0.424886 0.0820774 0.425917 0.0781875 0.427891L0.0154844 0.459719C-0.000828094 0.468 -0.00512497 0.489594 0.00678128 0.503594L0.125859 0.633234Z\" fill=\"black\"/>\r\n  {/* </g> */}\r\n  {/* <defs>\r\n  <clipPath id=\"clip0\">\r\n  <rect width=\"1em\" height=\"1em\" fill=\"white\"/>\r\n  </clipPath>\r\n  </defs> */}\r\n  </svg>;\r\n}\r\n\r\nexport default FaPlaneDeparture;","import * as React from \"react\";\r\n\r\nfunction FaPlaneArrival(props) {\r\n  return <svg width=\"1em\" height=\"1em\" className=\"plane-land\" viewBox=\"0 0 1 1\" fill=\"currentColor\" stroke=\"currentColor\" strokeWidth=\"0\" xmlns=\"http://www.w3.org/2000/svg\">\r\n  {/* <rect width=\"1\" height=\"1\" fill=\"#E5E5E5\"/>\r\n  <g id=\"Frame\" clip-path=\"url(#clip0)\"> */}\r\n  <path id=\"runway\" d=\"M0.975 0.8H0.025C0.0111875 0.8 0 0.811188 0 0.825V0.875C0 0.888813 0.0111875 0.9 0.025 0.9H0.975C0.988813 0.9 1 0.888813 1 0.875V0.825C1 0.811188 0.988813 0.8 0.975 0.8Z\" fill=\"black\"/>\r\n  <path id=\"plane-land\" d=\"M0.0700156 0.421344L0.208672 0.546344C0.220049 0.556617 0.233681 0.564072 0.248469 0.568109L0.697844 0.690531C0.739219 0.701797 0.783094 0.704156 0.824406 0.692656C0.870766 0.679734 0.892281 0.659516 0.898234 0.636859C0.904219 0.614203 0.895531 0.58575 0.861719 0.550984C0.831594 0.520016 0.792422 0.49975 0.751047 0.488484L0.598688 0.446984L0.441875 0.147219C0.439516 0.138141 0.432578 0.131047 0.423656 0.128609L0.321953 0.100906C0.305453 0.0964062 0.289297 0.109219 0.289594 0.126594L0.364469 0.383172L0.204781 0.339672L0.161672 0.233609C0.158656 0.225969 0.152281 0.220219 0.144453 0.218094L0.082375 0.201172C0.0662188 0.196766 0.0502969 0.208984 0.05 0.225984L0.0503594 0.385016C0.0506563 0.398938 0.0597813 0.412109 0.0700156 0.421344Z\" fill=\"black\"/>\r\n  {/* </g>\r\n  <defs>\r\n  <clipPath id=\"clip0\">\r\n  <rect width=\"1\" height=\"1\" fill=\"white\"/>\r\n  </clipPath>\r\n  </defs> */}\r\n  </svg>;\r\n}\r\n\r\nexport default FaPlaneArrival;","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { launch, inbound } from '../features/schedule/scheduleSlice';\r\nimport './StudMenu.css';\r\nimport LaunchSVG from '../resources/LaunchSVG';\r\nimport LandSVG from '../resources/LandSVG';\r\n\r\nconst StudMenu = props => {\r\n    const dispatch = useDispatch();\r\n    const event = props.event;\r\n\r\n    const backgroundOpacity = 0.5;\r\n    const eventColor = {\r\n        'C': `rgba(255,0,0,${backgroundOpacity}`,\r\n        'T': `rgba(255,165,0,${backgroundOpacity})`,\r\n        'N': `rgba(0,128,0,${backgroundOpacity})`,\r\n        'I': `rgba(135,206,235,${backgroundOpacity})`,\r\n        'V': `rgba(128,0,128,${backgroundOpacity})`,\r\n        'S': `rgba(255,165,0,${backgroundOpacity})`,\r\n        'F': `rgba(255,255,0,${backgroundOpacity})`\r\n    };\r\n    const color = eventColor[event.event[0]] || `rgba(255,182,193,${backgroundOpacity})`;\r\n\r\n    const [display, setDisplay] = useState(false);\r\n\r\n    // const displayMenu = e => {\r\n    //     setDisplay(true);\r\n    //     document.addEventListener('click', hideMenu, true);\r\n    // }\r\n\r\n    // const hideMenu = () => {\r\n    //     setTimeout(()=>{\r\n    //         setDisplay(false)\r\n    //         document.removeEventListener('click', hideMenu, true);\r\n    //     }, 0);\r\n    // }\r\n\r\n    return (\r\n        <div className=\"stud-menu\" style={{backgroundColor: color}}>\r\n            <button className=\"launch\" onClick={e=>dispatch(launch(event.uid))}>\r\n                {/* {<img src={launchPNG} alt=\"\" className=\"launch\"/>} */}\r\n                <LaunchSVG/>\r\n            </button>\r\n            {/* <button className=\"launch\">&#x1f6ec;</button> */}\r\n            {/* <button className=\"stud-menu-button\" onClick={displayMenu}>\r\n                <div className=\"menu-bar\"></div>\r\n                <div className=\"menu-bar\"></div>\r\n                <div className=\"menu-bar\"></div>\r\n            </button> */}\r\n            {display && <ul className={'menu-popup'}>\r\n                <li className=\"launch\" onClick={e=>dispatch(launch(event.uid))}>Launch</li>\r\n                <li className=\"inbound\"><LandSVG/> &#8250;\r\n                    <ul className=\"menu-popup sub-menu\">\r\n                        <li className=\"inbound-time\" onClick={e=>dispatch(inbound([event.uid,5]))}>5 Out</li>\r\n                        <li className=\"inbound-time\" onClick={e=>dispatch(inbound([event.uid,10]))}>10 Out</li>\r\n                        <li className=\"inbound-time\" onClick={e=>dispatch(inbound([event.uid,15]))}>15 Out</li>\r\n                        <li className=\"inbound-time\" onClick={e=>dispatch(inbound([event.uid,20]))}>20 Out</li>\r\n                        <li className=\"inbound-time\" onClick={e=>dispatch(inbound([event.uid,30]))}>30 Out</li>\r\n                    </ul>\r\n                </li>\r\n                {/* <li className=\"cancel\">Cancel</li>\r\n                <li className=\"incomplete\">Incomplete</li>\r\n                <li className=\"edit\">Edit &#8250;\r\n                    <ul className=\"menu-popup sub-menu\">\r\n                        <li className=\"edit-student\">Student</li>\r\n                        <li className=\"edit-launch\">Launch Time</li>\r\n                        <li className=\"edit-event\">Event</li>\r\n                        <li className=\"edit-duration\">Duration</li>\r\n                        <li className=\"edit-instructor\">Instructor</li>\r\n                    </ul>\r\n                </li> */}\r\n            </ul>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StudMenu;","import { useState, useEffect } from 'react';\r\nimport moment from 'moment';\r\n\r\nconst useTime = () => {\r\n    let refreshCycle = 1000*30;\r\n    //returns current time and re-renders every 'refresh cycle' ms\r\n    // inspired by: https://medium.com/javascript-in-plain-english/usetime-react-hook-f57979338de\r\n\r\n    const [time, setTime] = useState(moment().format('MM/DD/YYYY H:mm'));\r\n\r\n    useEffect(()=>{\r\n        const interval = setInterval(()=>{\r\n            setTime(moment().format('MM/DD/YYYY H:mm'));\r\n        }, refreshCycle);\r\n        return ()=> clearInterval(interval);\r\n    }, [refreshCycle, setTime]);\r\n\r\n    return time; // returns time string in format HHmm eg 0800, 2359, etc\r\n}\r\n\r\nexport default useTime;","import React from 'react';\r\n// import { useDispatch } from 'react-redux';\r\nimport useTime from '../hooks/useTime';\r\n// import { land }  from '../features/schedule/scheduleSlice';\r\nimport moment from 'moment';\r\nimport './Status.css';\r\n\r\nconst Status = props => {\r\n    // const dispatch = useDispatch();\r\n    const event = props.event;\r\n    const status = event.status;\r\n    const time = useTime();\r\n\r\n    const backgroundOpacity = 1;\r\n    const eventColor = {\r\n        'C': `rgba(255,0,0,${backgroundOpacity}`,\r\n        'T': `rgba(255,165,0,${backgroundOpacity})`,\r\n        'N': `rgba(0,128,0,${backgroundOpacity})`,\r\n        'I': `rgba(135,206,235,${backgroundOpacity})`,\r\n        'V': `rgba(128,0,128,${backgroundOpacity})`,\r\n        'S': `rgba(255,165,0,${backgroundOpacity})`,\r\n        'F': `rgba(255,255,0,${backgroundOpacity})`\r\n    }\r\n\r\n    let style = {\r\n        width: 0,\r\n        backgroundColor: eventColor[event.event[0]] || `rgba(255,182,193,${backgroundOpacity})`,\r\n    }\r\n\r\n    if (event.ATD && (status==='airborne' || status==='inbound')) {\r\n        const elapsedTime = Math.round((moment(time,\"MM/DD/YYYY H:mm\") - moment(event.ATD,\"MM/DD/YYYY H:mm\"))/60000);\r\n        // console.log({elapsedTime, time, event});\r\n\r\n        const percentComplete = Math.round(elapsedTime/(event.duration*60)*100);\r\n        style.width = `${percentComplete}%`;\r\n        style.borderTopRightRadius = percentComplete > 90 && '10px';\r\n        style.borderBottomRightRadius = percentComplete > 90 && '10px';\r\n    }\r\n    // const [elapsedTime, setElapsed] = useState()\r\n    // useEffect(()=>{\r\n    //     if ((status==='airborne' || status==='inbound') && event.ATD) {\r\n    //         setElapsed(Math.round((moment()-moment(event.ATD, 'HHmm'))/60000)+1);\r\n    //     }\r\n    // },[status, event.ATD])\r\n    // useEffect(() => {\r\n    //     if (status==='airborne') {\r\n    //         let interval = setInterval(() => {\r\n    //             setElapsed(elapsedTime => elapsedTime + 1);\r\n    //         }, 60000);\r\n    //         return () => clearInterval(interval);\r\n    //     } else if (status==='inbound') {\r\n    //         let interval = setInterval(() => {\r\n    //             setElapsed(elapsedTime => elapsedTime + 1);\r\n    //         }, 60000);\r\n    //         if (moment().isAfter(event.ATA, 'HHmm')) {\r\n    //             dispatch(land(event.uid));\r\n    //         }\r\n    //         return () => clearInterval(interval);\r\n    //     } else if (status==='landed') {\r\n    //         setElapsed(event.duration*60);\r\n    //     }\r\n    // }, [elapsedTime, status, event.ATA, event.duration, dispatch]);\r\n\r\n    return ( \r\n        <div className='status' style={style}>\r\n            {/* {status} */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Status","import React from 'react'\r\n// import { useSelector } from 'react-redux';\r\nimport moment from 'moment';\r\nimport StudMenu from './StudMenu';\r\nimport Status from './Status';\r\nimport './Event.css';\r\n    \r\nconst Event = props => {\r\n    const event = props.event;\r\n\r\n    const backgroundOpacity = (event.status==='airborne' || event.status==='inbound') ? 0.5 : 1\r\n    const eventColor = {\r\n        'C': `rgba(255,0,0,${backgroundOpacity}`,\r\n        'T': `rgba(255,165,0,${backgroundOpacity})`,\r\n        'N': `rgba(0,128,0,${backgroundOpacity})`,\r\n        'I': `rgba(135,206,235,${backgroundOpacity})`,\r\n        'V': `rgba(128,0,128,${backgroundOpacity})`,\r\n        'S': `rgba(255,165,0,${backgroundOpacity})`,\r\n        'F': `rgba(255,255,0,${backgroundOpacity})`\r\n    }\r\n\r\n    const name = event.student;\r\n    const displayName = name.split(' ')[0] + ' ' + name.split(' ')[1][0];\r\n    const duration = Math.round(event.duration*60);\r\n    const color = eventColor[event.event[0]] || `rgba(255,182,193,${backgroundOpacity})`;\r\n    \r\n    const startTime = event.ATD || event.ETD || event.skedDep;\r\n    let startCol = Math.floor((moment(startTime, 'MM/DD/YYYY H:mm')-moment('0800','HHmm'))/1000/60);\r\n    let startRow = 'auto';\r\n    if (startCol < 0 || startCol+duration > 1020) {\r\n        startCol = -duration;\r\n        startRow = 'auto';\r\n    }\r\n\r\n    const eventStyle = {\r\n        gridColumn: `${startCol} / span ${duration}`,\r\n        gridRowStart: startRow,\r\n        backgroundColor: 'white'\r\n    }\r\n\r\n    return (\r\n        <div className=\"event\" style={eventStyle}>\r\n            <div className=\"event-info\" style={{backgroundColor: color}}>\r\n                <h4 className=\"stud-name\">{displayName}</h4>\r\n                <p>{event.event.slice(0,8)} {event.duration.toFixed(1)}</p>\r\n            </div>\r\n            <StudMenu event={event} />\r\n            <Status event={event} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Event;","import React from 'react';\r\nimport moment from 'moment';\r\nimport { useSelector } from 'react-redux';\r\nimport Event from './Event';\r\nimport './Instructor.css';\r\n\r\nconst timeToGrid = ETD => {\r\n    return Math.floor((moment(ETD, 'MM/DD/YYYY H:mm')-moment('0800','HHmm'))/1000/60);\r\n}\r\n\r\nconst Instructor = props => {\r\n    const instructor = useSelector(state => state.schedule.instructors[props.uid])\r\n    const name = instructor.name;\r\n\r\n    const displayName = (name.includes('SOLO') ? 'SOLO' : (name.split(' ')[0] + ' ' + name.split(' ')[1][0]));\r\n    // name.split('[')[1].slice(0,-1) + ' ' + //rank\r\n\r\n    const crew = instructor.crew;\r\n    const crewName = \r\n    // crew?.split('[')[1].slice(0,-1) + ' ' + \r\n    crew?.split(' ')[0] + ' ' + crew?.split(' ')[1][0];\r\n    \r\n    const startTime = instructor.ATD || instructor.ETD || instructor.skedDep;\r\n    \r\n    const events = useSelector(state => instructor.events.map(eventUID => state.schedule.events[eventUID]));\r\n    const duration = Math.round(events.reduce((duration, event)=> duration + event.duration*60 + 15, -15));\r\n\r\n    const instStyle = {gridColumn: `${timeToGrid(startTime)} / span ${duration}`}\r\n\r\n    return (\r\n        <div className=\"instructor\" style={instStyle}>\r\n            <h3 className=\"instructor-name\">\r\n                {displayName}{crew ? ` / ${crewName}` : ''}\r\n            </h3>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Instructor;\r\n\r\n{/* <div className=\"events-container\" style={eventsContainerStyle}>\r\n    {[...events].sort((a,b)=> a.ATD<b.ATD)\r\n    .map((event, i) => (<Event uid={event.uid} key={i} />))\r\n    .reduce((accum, event, i)=>{\r\n        accum.push(event);\r\n        accum.push(<div className='hot-seat' key={'e'+i}></div>);\r\n        return accum;\r\n    }, []).slice(0,-1)}\r\n</div> */}","import React from 'react';\r\nimport moment from 'moment';\r\nimport { useSelector } from 'react-redux';\r\nimport Instructor from './Instructor';\r\nimport Event from './Event';\r\nimport './Line.css';\r\n\r\nconst Times = () => {\r\n    let hours = []\r\n    for (let i = 0; i < 68/4; i++) {\r\n        const time = moment(i+8, 'HH').format('HHmm');\r\n        hours.push(\r\n            <div className=\"time\" key={time}>\r\n                {time}\r\n            </div>\r\n        )\r\n    }\r\n    return (<div className=\"times\">{hours}</div>)\r\n}\r\n\r\nconst useSortedEvents = _eventUIDs => {\r\n    const events = useSelector(state=>_eventUIDs.map(eventUID=>state.schedule.events[eventUID]));\r\n    // const _events = useSelector(state => instructorUIDs.reduce((eventUIDs, uid)=>{\r\n    //     eventUIDs.push(...state.schedule.instructors[uid].events)\r\n    //     return eventUIDs;\r\n    // }, [])\r\n    // .map(eventUID=>state.schedule.events[eventUID]));\r\n    return [...events].sort((a,b)=>{\r\n        const aTime = a.ATD || a.ETD || a.skedDep;\r\n        const bTime = b.ATD || b.ETD || b.skedDep;\r\n        return moment(aTime,'MM/DD/YYYY H:mm') - moment(bTime, 'MM/DD/YYYY H:mm');\r\n    });\r\n}\r\n\r\nconst Line = props => {\r\n    const line = props.line\r\n    const instructorUIDs = useSelector(state => state.schedule.lines[line].instructors);\r\n    const _eventUIDs = useSelector(state => state.schedule.lines[line].events);\r\n    const events = useSortedEvents(_eventUIDs);\r\n\r\n\r\n    return (\r\n        <div className=\"line\">\r\n            <Times />\r\n            <div className=\"horizontal-line\"></div>\r\n            <span className=\"line-name\">{line}</span>\r\n            <div className=\"instructors-container\">\r\n                {instructorUIDs.map((uid, i)=> (<Instructor uid={uid} key={i}/>))}\r\n            </div>\r\n            <div className=\"events-container\">\r\n                {events.map((event, i)=>(<Event event={event} key={i}/>))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Line;","import React from 'react';\r\nimport moment from 'moment';\r\nimport useTime from '../hooks/useTime';\r\nimport './TimelineGrid.css';\r\n\r\n\r\nconst TimelineGrid = () => {\r\n    const minute = Math.round((moment(useTime(),'MM/DD/YYYY H:mm')-moment('08','HH'))/60000);\r\n    \r\n    let hours = [];\r\n    for (let i = 0; i < 17; i++) {\r\n        let active = null;\r\n        if (Math.floor(minute/60)===i) {\r\n            active = Math.floor((minute%60-1)/15);\r\n        }\r\n        hours.push(\r\n            <div className=\"hour\" key={i}>\r\n                <div className={`quarter quarter1 ${active===0 && 'active-quarter'}`}></div>\r\n                <div className={`quarter quarter2 ${active===1 && 'active-quarter'}`}></div>\r\n                <div className={`quarter quarter3 ${active===2 && 'active-quarter'}`}></div>\r\n                <div className={`quarter quarter4 ${active===3 && 'active-quarter'}`}></div>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n    return (\r\n        <div id=\"schedule-grid\">\r\n            {hours}\r\n            {minute < 1020 && <div id=\"minute\" style={{gridColumnStart: minute}}>&nbsp;</div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TimelineGrid;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport './Schedule.css';\r\nimport Line from './Line';\r\nimport TimelineGrid from './TimelineGrid';\r\n\r\nconst Schedule = () => {\r\n    const lines = useSelector(state => Object.keys(state.schedule.lines).sort()\r\n    // .filter(line=> line==='C09')\r\n    .map(line => (<Line line={line} key={line}/>)));    \r\n    return (\r\n    <div id=\"schedule\">\r\n        <TimelineGrid/>\r\n        <div id=\"schedule-lines\">\r\n            {lines}\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Schedule;","import React from 'react';\r\nimport Papa from 'papaparse';\r\nimport Dropzone from 'react-dropzone';\r\nimport { useDispatch } from 'react-redux';\r\nimport { parseData } from '../features/schedule/scheduleSlice';\r\nimport './DropArea.css';\r\n\r\n\r\nconst DropArea = () => {\r\n    const dispatch = useDispatch();\r\n//TODO: move the logic of actually parsing the data to the reducer function\r\n    const handleDrop = files => {\r\n        if (files.length) {\r\n            files.forEach(file => {\r\n                const config = {\r\n                    error: (error,file) => {\r\n                        console.log('Parsing Error: ', error, file);\r\n                    },\r\n                    complete: (results, file) => {\r\n                        console.log('Parsing Complete: ', results, file);\r\n                        dispatch(parseData(results.data));\r\n                    },\r\n                    skipEmptyLines: true,\r\n                    header: false\r\n                }\r\n                Papa.parse(file, config);\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Dropzone\r\n        onDrop={handleDrop}\r\n        accept=\"application/*\"\r\n        >\r\n            {({\r\n                getRootProps,\r\n                getInputProps,\r\n                isDragActive,\r\n                isDragAccept,\r\n                isDragReject\r\n            }) => {\r\n                const additionalClass = isDragAccept ? 'accept' : isDragReject ? 'reject' : '';\r\n                return (\r\n                    <div {...getRootProps({className: `dropzone ${additionalClass}`})}>\r\n                        <input {...getInputProps()}/>\r\n                        <div id=\"drag-instructions\">\r\n                            <h1>How to Get Data Into the Schedule Viewer</h1>\r\n                            <ol className=\"drag-instructions\">\r\n                                <li>Open TIMS</li>\r\n                                <li>My TIMS &gt; View Schedule</li>\r\n                                <li>Select and Copy the Entire Schedule\r\n                                    <ul className=\"drag-instructions\">\r\n                                        <li>Click anywhere and press Ctrl + A &amp; Ctrl + C</li>\r\n                                        <li>Edit Menu &gt; Select All &amp; Copy</li>\r\n                                    </ul>\r\n                                </li>\r\n                                <li>Open Excel</li>\r\n                                <li>Paste Schedule into Cell A1</li>\r\n                                <li>Save as .csv format</li>\r\n                                <li>Drag and drop the saved file onto this box, or click in the box to browse for the schedule</li>\r\n                                <br/>\r\n                                <p><em>Note:</em> Keep the .csv file handy. If you refresh this page, you will may need to upload it again.</p>\r\n                            </ol>\r\n                        </div>\r\n                        {isDragAccept && 'That is the right type of file'}\r\n                        {isDragReject && 'Wrong filetype!'}\r\n                    </div>\r\n                )\r\n            }}   \r\n        </Dropzone>\r\n    )\r\n}\r\n\r\nexport default DropArea\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport logo from './resources/28patch.png';\r\nimport Schedule from './components/Schedule';\r\nimport DropArea from './components/DropArea';\r\nimport './App.css';\r\nimport useTime from './hooks/useTime';\r\n\r\nfunction App() {\r\n  const data = useSelector(state=>state.schedule.parsedData);\r\n  const time = useTime();\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <img src={logo} alt=\"HT-28 Squadron Patch\" className=\"App-logo\" />\r\n        <h1>HT-28 {time.slice(-5,-3) + ':' + time.slice(-2)}</h1>\r\n      </header>\r\n      {data?.length ? <Schedule/> : <DropArea/>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport scheduleReducer from '../features/schedule/scheduleSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    schedule: scheduleReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}